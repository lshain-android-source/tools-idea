<idea-plugin>
  <name>Git Integration</name>
  <id>Git4Idea</id>
  <description>Provides integration with Git version control system</description>
  <version>8.1</version>
  <category>VCS Integration</category>
  <vendor url="http://svn.jetbrains.org/idea/Trunk/bundled/git4idea/" logo="/general/ijLogo.png">JetBrains</vendor>

  <depends>com.intellij.modules.vcs</depends>

  <actions>

    <action id="Git.Init" class="git4idea.actions.GitInit" text="Create Git Repository...">
      <add-to-group group-id="Vcs.Import"/>
    </action>

    <action id="Git.Log" class="git4idea.history.wholeTree.SelectRepositoryAndShowLogAction">
      <add-to-group group-id="Vcs.Browse"/>
    </action>

    <group id="GitFileActions">
      <reference ref="CheckinFiles"/>
      <reference ref="ChangesView.AddUnversioned"/>
      <separator/>
      <reference ref="Annotate"/>
      <reference ref="Show.Current.Revision"/>
      <reference ref="Compare.SameVersion"/>
      <reference ref="Compare.LastVersion"/>
      <reference ref="Compare.Selected"/>
      <action id="Git.CompareWithBranch" class="git4idea.actions.GitCompareWithBranchAction" text="Compare with Branch..." />
      <reference ref="Vcs.ShowTabbedFileHistory"/>
      <reference id="Vcs.ShowHistoryForBlock"/>
      <separator/>
      <action id="Git.Revert" class="git4idea.actions.GitRevert" icon="AllIcons.Actions.Rollback" text="Revert..."/>
      <action id="Git.ResolveConflicts" class="git4idea.actions.GitResolveConflictsAction" text="Resolve Conflicts..."/>
    </group>

    <group id="GitRepositoryActions">
      <action id="Git.Branches" class="git4idea.ui.branch.GitBranchesAction" text="_Branches..." icon="Git4ideaIcons.Branch"/>
      <action id="Git.Tag" class="git4idea.actions.GitTag" text="Tag Files..."/>
      <action id="Git.Merge" class="git4idea.actions.GitMerge" text="Merge Changes..." icon="AllIcons.Vcs.MergeSourcesTree"/>
      <action id="Git.Stash" class="git4idea.actions.GitStash" text="Stash Changes..."/>
      <action id="Git.Unstash" class="git4idea.actions.GitUnstash" text="UnStash Changes..."/>
      <action id="Git.Reset" class="git4idea.actions.GitResetHead" text="Reset HEAD..." icon="AllIcons.Actions.Reset"/>
      <separator/>
      <action id="Git.Fetch" class="git4idea.actions.GitFetch" text="Fetch"/>
      <action id="Git.Pull" class="git4idea.actions.GitPull" text="Pull..." icon="AllIcons.Actions.CheckOut"/>
      <action id="Git.Push" class="git4idea.actions.GitPushAction" icon="AllIcons.Actions.Commit" text="Push..."/>
      <separator/>
      <action id="Git.Rebase" class="git4idea.actions.GitRebase" text="Rebase..."/>
      <action id="Git.Rebase.Abort" class="git4idea.actions.GitRebaseAbort" text="Abort Rebasing"/>
      <action id="Git.Rebase.Continue" class="git4idea.actions.GitRebaseContinue" text="Continue Rebasing"/>
      <action id="Git.Rebase.Skip" class="git4idea.actions.GitRebaseSkip" text="Skip Commit in Rebasing"/>
      <separator/>
    </group>

    <group id="Git.Menu" class="git4idea.actions.GitMenu" popup="true" text="_Git">
      <reference ref="GitFileActions"/>
      <separator/>
      <reference ref="GitRepositoryActions"/>

      <add-to-group group-id="VcsGlobalGroup" anchor="after" relative-to-action="Vcs.Specific"/>
    </group>

    <group id="Git.ContextMenu" class="git4idea.actions.GitMenu" popup="true" text="_Git">
      <reference ref="GitFileActions"/>
      <separator/>
      <group id="Git.RepositoryContextMenu" popup="true" text="_Repository">
        <reference ref="GitRepositoryActions"/>
      </group>
      <add-to-group group-id="VcsGroup" anchor="last"/>
    </group>

    <group id="Git.LogContextMenu">
      <separator/>
    </group>

    <action id="Git.CherryPick" class="git4idea.cherrypick.GitCherryPickAction" text="Cherry-Pick" icon="Git4ideaIcons.CherryPick" anchor="First"/>

  </actions>

  <project-components>
    <component>
      <implementation-class>git4idea.repo.GitRepositoryManager</implementation-class>
    </component>
  </project-components>

  <extensions defaultExtensionNs="com.intellij">
    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <vcs name="Git" vcsClass="git4idea.GitVcs" displayName="Git" administrativeAreaName=".git"/>
    <checkoutProvider implementation="git4idea.checkout.GitCheckoutProvider"/>
    <vcsPopupProvider implementation="git4idea.actions.GitQuickListContentProvider"/>
    <vcsCheckinHandlerFactory implementation="git4idea.checkin.GitCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="git4idea.checkin.UnresolvedMergeCheckFactory"/>

    <vcsChangesViewRefresher implementation="git4idea.changes.GitChangesViewRefresher" />
    
    <vcs.rootFinder implementation="git4idea.roots.GitRootFinder"/>

    <projectService
      serviceInterface="git4idea.history.wholeTree.LogFactoryService"
      serviceImplementation="git4idea.history.wholeTree.LogFactoryService"/>
    <projectService
        serviceInterface="git4idea.annotate.GitAnnotationProvider"
        serviceImplementation="git4idea.annotate.GitAnnotationProvider"/>
    <projectService
        serviceInterface="git4idea.diff.GitDiffProvider"
        serviceImplementation="git4idea.diff.GitDiffProvider"/>
    <projectService
        serviceInterface="git4idea.checkin.GitCheckinEnvironment"
        serviceImplementation="git4idea.checkin.GitCheckinEnvironment"/>
    <projectService
        serviceInterface="git4idea.status.GitChangeProvider"
        serviceImplementation="git4idea.status.GitChangeProvider"/>
    <projectService
        serviceInterface="git4idea.history.GitHistoryProvider"
        serviceImplementation="git4idea.history.GitHistoryProvider"/>
    <projectService
        serviceInterface="git4idea.rollback.GitRollbackEnvironment"
        serviceImplementation="git4idea.rollback.GitRollbackEnvironment"/>
    <projectService
        serviceInterface="git4idea.config.GitVcsSettings"
        serviceImplementation="git4idea.config.GitVcsSettings"/>
    <projectService
        serviceInterface="git4idea.settings.GitPushSettings"
        serviceImplementation="git4idea.settings.GitPushSettings"/>
    <projectService
        serviceInterface="git4idea.history.NewGitUsersComponent"
        serviceImplementation="git4idea.history.NewGitUsersComponent"/>
    <projectService
        serviceInterface="git4idea.history.browser.GitProjectLogManager"
        serviceImplementation="git4idea.history.browser.GitProjectLogManager"/>
    <projectService
        serviceInterface="git4idea.config.GitExecutableValidator"
        serviceImplementation="git4idea.config.GitExecutableValidator"/>
    <projectService
        serviceInterface="git4idea.MessageManager"
        serviceImplementation="git4idea.MessageManager"/>
    <projectService serviceInterface="git4idea.Notificator"
                    serviceImplementation="git4idea.Notificator"/>
    <projectService serviceInterface="git4idea.history.wholeTree.GitLogSettings"
                    serviceImplementation="git4idea.history.wholeTree.GitLogSettings"/>
    <projectService serviceInterface="git4idea.roots.GitRootProblemNotifier"
                    serviceImplementation="git4idea.roots.GitRootProblemNotifier"/>
    <projectService serviceInterface="git4idea.branch.GitBrancher"
                    serviceImplementation="git4idea.branch.GitBrancherImpl"/>

    <applicationService serviceImplementation="git4idea.history.wholeTree.GitCommitsSequentialIndex"
                        serviceInterface="git4idea.history.wholeTree.GitCommitsSequentially"/>
    <applicationService serviceInterface="git4idea.config.GitVcsApplicationSettings"
                        serviceImplementation="git4idea.config.GitVcsApplicationSettings"/>
    <applicationService serviceInterface="org.jetbrains.git4idea.ssh.GitXmlRpcSshService"
                        serviceImplementation="org.jetbrains.git4idea.ssh.GitXmlRpcSshService"/>
    <applicationService serviceInterface="git4idea.commands.GitHttpAuthService"
                        serviceImplementation="git4idea.commands.GitHttpAuthServiceImpl" />
    <applicationService serviceInterface="git4idea.rebase.GitRebaseEditorService"
                        serviceImplementation="git4idea.rebase.GitRebaseEditorService"/>
    <applicationService serviceInterface="git4idea.config.SSHConnectionSettings"
                        serviceImplementation="git4idea.config.SSHConnectionSettings"/>
    <applicationService serviceInterface="git4idea.remote.GitRememberedInputs"
                        serviceImplementation="git4idea.remote.GitRememberedInputs"/>
    <applicationService serviceInterface="git4idea.commands.Git"
                        serviceImplementation="git4idea.commands.GitImpl"/>
    <applicationService serviceInterface="git4idea.GitPlatformFacade"
                        serviceImplementation="git4idea.GitPlatformFacadeImpl" />
    <applicationService serviceInterface="git4idea.DialogManager"
                        serviceImplementation="git4idea.DialogManager" />

    <ComponentRoamingType component="Git.Settings" type="DISABLED"/>
    <fileTypeFactory implementation="git4idea.vfs.GitFileTypeFactory"/>
    <vcs.taskHandler implementation="git4idea.GitTaskHandler"/>
  </extensions>

  <extensionPoints>
    <extensionPoint qualifiedName="Git4Idea.GitHttpAuthDataProvider" interface="git4idea.jgit.GitHttpAuthDataProvider"/>
  </extensionPoints>

</idea-plugin>
